[{"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\index.js":"1","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\reportWebVitals.js":"2","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\App.js":"3","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\NavBar.js":"4","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Banner.js":"5","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Skills.js":"6","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Projects.js":"7","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Footer.js":"8","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Contact.js":"9","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\ProjectCard.js":"10","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\education.js":"11"},{"size":535,"mtime":1660661772263,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1660661772265,"results":"14","hashOfConfig":"13"},{"size":802,"mtime":1664528856238,"results":"15","hashOfConfig":"13"},{"size":2754,"mtime":1661059823772,"results":"16","hashOfConfig":"13"},{"size":3311,"mtime":1661005035939,"results":"17","hashOfConfig":"13"},{"size":1851,"mtime":1664531328000,"results":"18","hashOfConfig":"13"},{"size":3623,"mtime":1664529656024,"results":"19","hashOfConfig":"13"},{"size":1170,"mtime":1664529369361,"results":"20","hashOfConfig":"13"},{"size":3810,"mtime":1661004649442,"results":"21","hashOfConfig":"13"},{"size":744,"mtime":1664531343750,"results":"22","hashOfConfig":"13"},{"size":3097,"mtime":1664530788964,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"p7u6mc",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\index.js",[],[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\reportWebVitals.js",[],[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\App.js",[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\NavBar.js",["63","64","65"],[],"import { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from '../assets/img/logo.svg';\r\nimport navIcon1 from '../assets/img/nav-icon1.svg';\r\nimport navIcon2 from '../assets/img/nav-icon2.svg';\r\nimport navIcon3 from '../assets/img/nav-icon3.svg';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport {\r\n  HashRouter  as Router\r\n} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n  const [activeLink, setActiveLink] = useState('home');\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [])\r\n\r\n  const onUpdateActiveLink = (value) => {\r\n    setActiveLink(value);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">\r\n            <img className=\"my-logo\" src={logo} alt=\"Logo\" />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\r\n              <Nav.Link href=\"#skills\" className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\r\n              <Nav.Link href=\"#project\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\r\n            </Nav>\r\n            <span className=\"navbar-text\">\r\n              <div className=\"social-icon\">\r\n                <a className=\"linkedin\" href=\"https://www.linkedin.com/in/md-samir-9ba4351bb/\" target=\"_blank\"><img src={navIcon1} alt=\"\" /></a>\r\n                <a className=\"github\" href=\"https://github.com/Samir-Alam\" target=\"_blank\"><img src={navIcon2} alt=\"\" /></a>\r\n                <a className=\"insta\" href=\"https://www.instagram.com/samir_ig_0/\" target=\"_blank\"><img src={navIcon3} alt=\"\" /></a>\r\n              </div>\r\n              <HashLink to='#connect'>\r\n                <button className=\"vvd\"><span>Let’s Connect</span></button>\r\n              </HashLink>\r\n            </span>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </Router>\r\n  )\r\n}","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Banner.js",["66","67","68"],[],"import { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n// import headerImg from \"../assets/img/longHair.jpg\";\r\nimport nameImg from \"../assets/img/logo.svg\";\r\nimport { ArrowRightCircle } from \"react-bootstrap-icons\";\r\nimport 'animate.css';\r\nimport TrackVisibility from \"react-on-screen\";\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [ \"Web Developer\", \"Java Coder\", \"Web Designer\", \"Competetive Coder\", \"Android Developer\" ];\r\n  const period = 2000;\r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, 150);\r\n\r\n    return () => { clearInterval(ticker) };\r\n  }, [text])\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta(prevDelta => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex(prevIndex => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === '') {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex(prevIndex => prevIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <div className=\"bgImg\"></div>\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n          <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n              <div className={isVisible ? \"animate__animated animate__fadeIn bannerName\" : \"bannerName\"}>\r\n                <span className=\"tagline\">Welcome to my Portfolio Website</span>\r\n                <h1>{`Hi! I'm Md Samir`} <br /> <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ]'><span className=\"wrap\">{text}</span></span></h1>\r\n                  <p>I am a passionate coder/developer currently pusuing my B.Tech degree in Computer Science from Asansol Engineering College.I Love Coding since I was aware of it. I don't get bored sitting in front of my laptop screen and writing codes, instead I really enjoy coding not just to take job but it now has became my hobby.</p>\r\n                  <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\r\n              </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={5}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\r\n                  {/* <img className=\"animatedImg\" src={headerImg} alt=\"Header Img\"/> */}\r\n                  <img className=\"animatedImg\" src={nameImg} alt=\"Header Img\"/>\r\n                </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  )\r\n}","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Skills.js",[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Projects.js",[],[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Footer.js",[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\Contact.js",["69"],[],"import { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport contactImg from \"../assets/img/contact-img.svg\";\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\nexport const Contact = () => {\r\n  const formInitialDetails = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    message: ''\r\n  }\r\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\r\n  const [buttonText, setButtonText] = useState('Send');\r\n  const [status, setStatus] = useState({});\r\n\r\n  const onFormUpdate = (category, value) => {\r\n      setFormDetails({\r\n        ...formDetails,\r\n        [category]: value\r\n      })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setButtonText(\"Sending...\");\r\n    let response = await fetch(\"http://localhost:5000/contact\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(formDetails),\r\n    });\r\n    setButtonText(\"Send\");\r\n    let result = await response.json();\r\n    setFormDetails(formInitialDetails);\r\n    if (result.code == 200) {\r\n      setStatus({ succes: true, message: 'Message sent successfully'});\r\n    } else {\r\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact\" id=\"connect\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col size={12} md={6}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\r\n              }\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col size={12} md={6}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\r\n                <h2>Get In Touch</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  <Row>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\r\n                    </Col>\r\n                    <Col size={12} className=\"px-1\">\r\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\r\n                      <button type=\"submit\"><span>{buttonText}</span></button>\r\n                    </Col>\r\n                    {\r\n                      status.message &&\r\n                      <Col>\r\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\r\n                      </Col>\r\n                    }\r\n                  </Row>\r\n                </form>\r\n              </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  )\r\n}","X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\ProjectCard.js",[],[],"X:\\Web_Development\\Projects\\Portfolio\\my-portfolio\\src\\components\\education.js",[],[],{"ruleId":"70","severity":1,"message":"71","line":53,"column":17,"nodeType":"72","messageId":"73","endLine":53,"endColumn":112,"fix":"74"},{"ruleId":"70","severity":1,"message":"71","line":54,"column":17,"nodeType":"72","messageId":"73","endLine":54,"endColumn":92,"fix":"75"},{"ruleId":"70","severity":1,"message":"71","line":55,"column":17,"nodeType":"72","messageId":"73","endLine":55,"endColumn":99,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":13,"column":10,"nodeType":"79","messageId":"80","endLine":13,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":14,"column":10,"nodeType":"79","messageId":"80","endLine":14,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":24,"column":6,"nodeType":"84","endLine":24,"endColumn":12,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":39,"column":21,"nodeType":"88","messageId":"89","endLine":39,"endColumn":23},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"90","text":"91"},{"range":"92","text":"91"},{"range":"93","text":"91"},"no-unused-vars","'delta' is assigned a value but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",[2180,2180]," rel=\"noreferrer\"",[2306,2306],[2439,2439],{"desc":"95","fix":"96"},"Update the dependencies array to be: [text, tick]",{"range":"97","text":"98"},[898,904],"[text, tick]"]